 Q.1) add two 2D matrices to get the result matrix (Add the elements at corresponding rows and columns positions)

    public class NewClass {
	
    public static void main(String[] args)
    {
        int[][] mat1 = {{ 1, 2, 3, 4, 5},{16, 17, 18, 19, 6}};
        int[][] mat2 = {{16, 17, 18, 19, 6},{1,2,44,55,7}};
        int [][] result = new int[2][5];
        for(int i=0; i<mat1.length; i++) {
        	for(int j=0; j<mat1[i].length; j++) {
        		
        		result[i][j] = mat1[i][j] + mat2[i][j];
        	}
        	
        }
        for(int i=0; i<result.length; i++) {
        	for(int j=0; j<result[i].length; j++) {
        		System.out.print(result[i][j]+" ");
        	}
        	 System.out.println();
        }
       
        
    }
}

//*****************************************************************************************//
Q.2) Given an M × N integer matrix, print it in spiral order
   Input:
 
	[  1   2   3   4  5 ]
	[ 16  17  18  19  6 ]
	[ 15  24  25  20  7 ]
	[ 14  23  22  21  8 ]
	[ 13  12  11  10  9 ]
 
	Output  :  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25

       public class NewClass {
	private static void printSpiralOrder(int[][] mat)
    {
        
        int top = 0, bottom = mat.length - 1;
        int left = 0, right = mat[0].length - 1;
 
        while (true)
        {
            if (left > right) {
                break;
            }
 
            // print top row
            for (int i = left; i <= right; i++) {
                System.out.print(mat[top][i] + " ");
            }
            top++;
 
            if (top > bottom) {
                break;
            }
 
            // print right column
            for (int i = top; i <= bottom; i++) {
                System.out.print(mat[i][right] + " ");
            }
            right--;
 
            if (left > right) {
                break;
            }
 
            // print bottom row
            for (int i = right; i >= left; i--) {
                System.out.print(mat[bottom][i] + " ");
            }
            bottom--;
 
            if (top > bottom) {
                break;
            }
 
            // print left column
            for (int i = bottom; i >= top; i--) {
                System.out.print(mat[i][left] + " ");
            }
            left++;
        }
    }
 
    public static void main(String[] args)
    {
        int[][] mat = { { 1, 2, 3, 4, 5},{16, 17, 18, 19, 6},{15, 24, 25, 20, 7},
        		 {14, 23, 22, 21, 8},{13, 12, 11, 10, 9}};
  
        printSpiralOrder(mat);
    }
}
//*****************************************************************************************//
		
Q.3)  Change all elements of row `i` and column `j` in a matrix to 0 if cell `(i, j)` is 0
	Input :
		[ 1  1  0  1  1 ]
		[ 1  1  1  1  1 ]
		[ 1  1  1  0  1 ]
		[ 1  1  1  1  1 ]
		[ 0  1  1  1  1 ]
 
	Output:
 
		[ 0  0  0  0  0 ]
		[ 0  1  0  0  1 ]
		[ 0  0  0  0  0 ]
		[ 0  1  0  0  1 ]
		[ 0  0  0  0  0 ]

code ------->
             import java.util.Arrays;

public class Practice2
{
  
    public static void changeRowColumn(int[][] mat, int M, int N, int x, int y)
    {
        for (int j = 0; j < N; j++)
        {
            if (mat[x][j] != 0) {
                mat[x][j] = -1;
            }
        }
 
        for (int i = 0; i < M; i++)
        {
            if (mat[i][y] != 0) {
                mat[i][y] = -1;
            }
        }
    }
 
    
    public static void convert(int[][] mat)
    {
        
        if (mat == null || mat.length == 0) {
            return;
        }
 
        
        int M = mat.length;
        int N = mat[0].length;
 
       
        for (int i = 0; i < M; i++)
        {
            for (int j = 0; j < N; j++)
            {
                if (mat[i][j] == 0)           
                {
                   
                    changeRowColumn(mat, M, N, i, j);
                }
            }
        }
 
       
        for (int i = 0; i < M; i++)
        {
            for (int j = 0; j < N; j++)
            {
                if (mat[i][j] == -1) {
                    mat[i][j] = 0;
                }
            }
        }
    }
 
    public static void main(String[] args)
    {
        int[][] mat =
        {
            { 1, 1, 0, 1, 1 },
            { 1, 1, 1, 1, 1 },
            { 1, 1, 0, 1, 1 },
            { 1, 1, 1, 1, 1 },
            { 0, 1, 1, 1, 1 }
        };
 
        
        convert(mat);
 
       
        for (var r: mat) {
            System.out.println(Arrays.toString(r));
        }
    }
}


//*****************************************************************************************//